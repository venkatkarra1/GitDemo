import java.awt.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.stream.Stream;

import org.testng.annotations.Test;

public class test1 {

	public static void main(String[] args) {
		//count the number of names starting with alphabet A in List
		test1 t1 = new test1();
		t1.streamMap();
		//t1.regular();
		//t1.StreamFilter();
	}
		public static void regular()
		{
			ArrayList<String> names = new ArrayList<String>();//this is how we need to create Array list object, this list will only have stirngs
			names.add("eAbhijeet");
			names.add("eAon");
			names.add("gAlekya");
			names.add("eAdam");
			names.add("fARam");
			int count = 0;//if we want to get the count of the names starting with Alphabet A then we need to iterate through ArrayList using forloop
			for(int i=0;i<names.size();i++)//names.size of an arrayi.e 5 names, it will iterate 5 times, each time if we want to grab unique
			{
	
				String actual = names.get(i);//lets store it in a variable called as actual
				if(actual.startsWith("A"))//now you should compare if that string starts with Letter A then 
				{
					count++;
				}
			}
			System.out.println(count);
		}
		public void StreamFilter()

		{
			ArrayList<String> names = new ArrayList<String>();//this is how we need to create Array list object, this list will only have stirngs
			names.add("abhijeet");
			names.add("aon");
			names.add("alekya");
			names.add("adam");
			names.add("aRam");
			//there is no life for intermediate operation if there is no terminal operation
			//terminal operation will execute only if intermediate operation(filter) returns true
			//we can create stream
			//how to use filter in stream API
			Long c = names.stream().filter(s->s.startsWith("A")).count();//lambda expression part 2 this is also called as terminal operation
			System.out.println(c);
			Long d = Stream.of("Abhijeet","ADon","Alekhya","Adam","ARam").filter(s->
			{
				s.startsWith("A");	
				return true;
			}).count();
			System.out.println(d);
			//print all the names of array list
			names.stream().filter(s->s.length()>4).forEach(s->System.out.println(s));
			names.stream().filter(s->s.length()>4).limit(1).forEach(s->System.out.print(s));
			
			
		
			
		}
		public void streamMap()
		{
			//Alekhya to ALEKHYA
			//print names which have last letter as "a" with Uppercase
			Stream.of("Abhijeet","Don","Alekhya","Adam","Rama").filter(s->s.endsWith("a")).map(s->s.toUpperCase())
			.forEach(s->System.out.println(s));
			//print names which have first letter as a uppercase and sorted
			ArrayList<String> names1 = new ArrayList<String>();//this is how we need to create Array list object, this list will only have stirngs
			names1.add("AZhijeet");
			names1.add("Don");
			names1.add("Alekhya");
			names1.add("Adam");
			names1.add("Rama");
			//List<String>names=Arrays.asList("Abhijeet","Don","Alekhya","Adam","Rama");
			names1.stream().filter(s->s.startsWith("A")).sorted().map(s->s.toUpperCase()).forEach(s->System.out.println(s));
		}

}

	